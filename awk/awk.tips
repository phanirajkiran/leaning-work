http://www.staff.science.uu.nl/~oostr102/docs/nawk/nawk_107.html


ID_090-1 2
ID_3787-1 4
ID_0098-1 1
ID_12-1 4

ID_090 2
ID_3787 4
ID_0098 1
ID_12 4

separator
$ awk -F'[- ]' '{print $1, $3}' a
ID_090 2
ID_3787 4
ID_0098 1
ID_12 4


http://www.staff.science.uu.nl/~oostr102/docs/nawk/nawk_toc.html

#replace
sub is more often for the filed substitution
lyang0@lyang0-OptiPlex-755:~/del$ awk 'sub(/..$/,"",$1)1' 2
ID_090 2
ID_3787 4
ID_0098 1
ID_12 4

awk '/Speed/ {sub("Mb/s","",$2);print $2}'

str = "water, water, everywhere"
sub(/at/, "ith", str)
{ sub(/candidate/, "& and his wife"); print }

how to replace the first `|' on each line with an `&': 
awk '{ sub(/\|/, "\\&"); print }'

lyang0@lyang0-OptiPlex-755:~$ echo "fdsfs35" |awk '{sub(/[a-z]+/,"");print}'
35
lyang0@lyang0-OptiPlex-755:~$ echo "fdsfs35" |awk '{sub(/[a-z]+/,"&|");print}'
fdsfs|35
lyang0@lyang0-OptiPlex-755:~$ echo "fdsfs35" |awk '{sub(/[a-z]+/,"& ");print}'
fdsfs 35

#handle the field
lyang0@lyang0-OptiPlex-755:~/delmeme$ awk -F/ '{T=$4;sub(/[a-z]+/,"",T);print T}' 3
55


#substr
cut for the field
echo "/dev/sda3" |awk -F/ '{print substr($3,4)}'

substr(string, start, length) 
substr($3,12,8) 
substr($3,6)

#split
time = 12:34:56
echo $time | awk '{split($0,a,":"); print a[1]}'` # = 12
echo $time | awk '{split($0,a,":"); for (i=1; i<=3; i++) print a[i]}'

lyang0@lyang0-OptiPlex-755:~/del$ awk '{split($1,a,"-"); print a[1],$2}' 2
ID_090 2
ID_3787 4
ID_0098 1
ID_12 4

sudo ethtool eth1 |awk '/Speed/{split($2,T,"Mb/s"); print T[1]}'

awk -F ':' '{split($1,T,"/");split($2,I,"=");print T[14] "=" I[3]}'

#getline
#pipe
awk 'BEGIN{"date"|getline var;split(var,a);print a[4]}'

The line behand one line
{
TextRel 203 0 0 "WELL:"
SetPosAbs 1287 -6676
TextRel 210 0 0 "AEP #2"

The marker is WELL:, but the string I need is "AEP #2". Can grep/sed handle this or is some sort of read command required?
}
awk '/"WELL:"/{getline;getline;print $5, $6; exit}' asciipds


#FS
1)Two FS, and pass the variable, and tell the specifc line different line  
awk -F: 'NR==1 { D=$3 } /Kbytes/ { FS=" "; $0=$0; print D, substr($(NF-1), 2); }' datafile

info:3260648:050512:000253:  0: begin 
info:3260648:050512:000253:  0:       DEST_FN: 
info:3260648:050512:000253:  0:   remote host: 
:
:
750 bytes sent in 0.1604 seconds (4.567 Kbytes/s)

#issue action this can be combined for the jianshao fa or increase fa, NO issue action is only for the one line
#pass the external variable to awk
echo "AB|CD|EF|GH|IJ" | awk -v var1="B" -F\| '$1~/A/ && $1~var1'


#arithmetic
awk '/tom/ {count++;} END {print "tom was found "count" times"}' file
awk '{s+=$1} END {print s}' 

awk 'BEGIN {FS="\|\^"} {sum+=$5+$8} END {print sum}' infile
#multi separator 
awk -F'[,;]' '{print $7}' infile

#1
$ awk '{$0="10.0.0.1,"$0}1' test.txt

format output and pass the varialble 
#!/bin/bash
awk -v app=$1 -v  pre=$2 '{printf("%s %s %s\n",app,$0,pre);}' input_file

外部变量:

NOTE:.........
lyang0@lyang0-OptiPlex-755:~/community/leaning-work$ echo "BOARD_NAME: intel-atom" | awk -v custom="BOARD_NAME" -F: '$0 ~custom{print $2}' 
 intel-atom
lyang0@lyang0-OptiPlex-755:~/community/leaning-work$ echo "BOARD_NAME: intel-atom" | awk -v custom="BOARD_NAMExx" -F: '$0 ~custom{print $2}' 
lyang0@lyang0-OptiPlex-755:~/community/leaning-work$ 

awk 不光显示匹配行
testcase set_details -obj "%(PROJECT)/%(CASE_FOLDER_PATH)/17 TPS/106 sched_setscheduler/20.10.30.17.2916  19-2.run-test" -priority "2 - Medium" -desc "19-2.run-test" -category Runtime -exec_method Automatic

awk '{if($0~desc){split($6,a,"/");split($13,b,"\"");$13= "\""a[1] " "b[2]"\"" ;print}else print}'
awk '{if ($0 ~ /abc/) print $2 ; else print}'

打印双引号
[lyang0@pek-lpgbuild8 wr-kernel]$ echo "abc:bcd" |awk '{split($0,b,":");print  "\"" b[1] "\"" "is good"}'
"abc"is good

awk '{if ( $0 ~ /[0-9]/) { print $0 } else { print "1" } }'
if () {} else {}
awk '{ if ( NF == 3 ) { print > Old_file } else { print > new_file } }' file3
awk -v m="/opt/ltp/wrLinux_ltp/wr-runltp -s" '{if($0~/desc/){split($12,b,"\"");$12="\""m " "b[2] "\"";print}else print}'


BEGIN
END

awk  'BEGIN { FS=";"; OFS=" "} { $1=$1;print $0 }'

'/path/to/files/file00010000070874.EXT'
'/path/to/files/file00010000070875.EXT'
'/path/to/files/file00010000070876.EXT'
'/path/to/files/file00010000070877.EXT'
'/path/to/files/file00010000070878.EXT'
'/path/to/files/file00010000070879.EXT'

===>

file00010000070874.EXT

awk -F\' '{sub(/.*\//,"",$2);print $2}' logfile


awk -F "['/]" '{ print $(NF-1)}'


echo "foo-bar-something-1.0-r1.src.rpm" |awk -F'-[0-9]' '{print $1}'

格式化输出
find /sys/devices/ -name sdc |awk -v var=$bus_num -F'usb' '{$1 = sprintf("%s%s%s", $1, "usb"var"/","idProduct");print $1}'

使用变量来分割
a=usb2
find . -name sdb |awk -F"$a" '{print $1}'



http://blog.51yip.com/shell/1151.html great



echo "4.7" | awk '{printf("%.f\n",$1)}'


awk '!x[$0]++' remove 重复的line 不sort


echo "a b c d" |awk '{$3="m";print $0}'


if else
cat aaaa |awk '{if ($1 =="a") {$3="m";print $0}}'  a 要用双引号


lyang001@lyang001-OptiPlex-9010:/tmp$ cat file |awk 'NR==3 {$2="JB"}1'
Jones 2143 78 84 77
Gondrol 2321 56 58 45
RinRao JB 38 37
Edwin 2537 78 67 45
Dayan 2415 30 47
lyang001@lyang001-OptiPlex-9010:/tmp$ cat file 
Jones 2143 78 84 77
Gondrol 2321 56 58 45
RinRao 2122 38 37
Edwin 2537 78 67 45
Dayan 2415 30 47
lyang001@lyang001-OptiPlex-9010:/tmp$ cat file |awk '{ if ( NR==3) {$2="JB"}}{print }'
Jones 2143 78 84 77
Gondrol 2321 56 58 45
RinRao JB 38 37
Edwin 2537 78 67 45
Dayan 2415 30 47

lyang001@lyang001-OptiPlex-9010:/tmp$ cat file |awk '{if (NR==3){$2="JB";print $0}}'
RinRao JB 38 37


lyang001@lyang001-OptiPlex-9010:/tmp$ cat file |awk '{ if ( NR==3) {$2="JB";print $0} else {print "xxxx"}}'
xxxx
xxxx
RinRao JB 38 37
xxxx
xxxx


lyang001@lyang001-OptiPlex-9010:/tmp$ cat file |awk '$1=="RinRao"{print NR}'
3
6
lyang001@lyang001-OptiPlex-9010:/tmp$ cat file 
Jones 2143 78 84 77
Gondrol 2321 56 58 45
RinRao 2122 38 37
Edwin 2537 78 67 45
Dayan 2415 30 47
RinRao 2122 38 37


Awk ORS is an Output equivalent of RS. Each record in the output will be printed with this delimiter. Following is an awk ORS example:


awk 'BEGIN{ORS="=";} {print;}' student-marks


lyang001@lyang001-OptiPlex-9010:~/records$ cat aaaa |awk '{print NR}'
1
2
3
4
lyang001@lyang001-OptiPlex-9010:~/records$ cat aaaa |awk 'END {print NR}'
4



#cat file
Gondrol 2321 56 58 45
RinRao 2122 38 37
Edwin 2537 78 67 45
Dayan 2415 30 47
RinRao 2122 38 37

到了Gondrol 这之后的打印
lyang001@lyang001-OptiPlex-9010:/tmp$ cat file |awk '/Gondrol/{x=NR+2}(NR<=x){print}'
Gondrol 2321 56 58 45
RinRao 2122 38 37
Edwin 2537 78 67 45
lyang001@lyang001-OptiPlex-9010:/tmp$ cat file |awk '/Gondrol/{x=NR+2;next}(NR<=x){print}'
RinRao 2122 38 37
Edwin 2537 78 67 45

lyang001@lyang001-OptiPlex-9010:/tmp$ cat file |awk '/Gondrol/{print NR+2}'
4


$ x=`awk '/Linux/{print NR}' file`
$ y=`awk '/Linux/{print NR+2}' file`
$ sed -n "$x,$y p" file

OR

$ x=`awk '/Linux/{print NR+2}' file`
$ sed -n "/Linux/,$x p" file


$ awk '/Linux/{print;getline;print;}' file
Linux
Solaris

    Once the line containing the pattern Linux is found, it is printed. getline command reads the next line into $0. Hence, the second print statement prints the next line in the file.
:http://www.theunixschool.com/2012/05/different-ways-to-print-next-few-lines.html


lyang001@lyang001-OptiPlex-9010:/tmp$ cat file |awk '/Edwin/{p=1;next}{if(p){print}}'
Dayan 2415 30 47
RinRao 2122 38 37

if or 
awk '{if ($2=="abc" || $2="def") print "blah" }'
awk '$2~/^(abc|def)$/ {print "blah"}'

awk '$2=="abc" || $2=="def" {print "blah"}'


