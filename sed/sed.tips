小结：
sed中可直接使用的RE：
*  .  ^  $  [  ]  \  c 
\w ( 相当于[A-Za-z_] )  \W ( 相当于[^A-Za-z_] ) 
sed中需转义使用的RE：
+  ?  {  }  (  )  |  <  > 
其他：
\d (d)  \D (D)  \s (s)  \S (S) 
匹配 单引号’ 用双引号
匹配 反引号` 用单引号
\b 匹配单词的前或后边界 ( 字符[^A-Za-z0-9_]均构成单词边界 )
\B 匹配单词的非边界 ( 字符[^A-Za-z0-9_]均构成单词边界 )
\< 匹配单词的位置前 ( 字符[^A-Za-z0-9_]均构成单词边界 )
\> 匹配单词的位置后 ( 字符[^A-Za-z0-9_]均构成单词边界 )
支持十进制，格式为“\d + 两位或三位十进制数”，如“\d065 或\d65 均代表字符 A ”
支持十六进制，格式为“\x + 两位十六进制数”，如“\x61 代表字符 A ”
支持八进制，格式为“\o + 两位或三位八进制数”，如“\o077 或\o77 均代表字符 ？，\o101代表字符 A ”
http://www.ixpub.net/thread-1463174-1-1.html

x\{m\}
重复字符x，m次，如：/0\{5\}/匹配包含5个o的行。

x\{m,\}
重复字符x,至少m次，如：/o\{5,\}/匹配至少有5个o的行。

x\{m,n\}
重复字符x，至少m次，不多于n次，如：/o\{5,10\}/匹配5--10个o的行。


lyang0@lyang0-OptiPlex-755:~/del$ echo "mmm1000" |sed 's/[^0-9]//g'
1000

在文件file.txt中含有insert的行前面加入文件insert.file
[root@linuxso.com zhaoyj]# sed -e '/insert/{h;s/.*/cat insert.file/e;G}' file.txt 

在文件file.txt中含有insert的行后面加入文件insert.file
[root@linuxso.com zhaoyj]# sed -e '/insert/{p;s/.*/cat insert.file/e;}' file.txt 

#match the whole word
sed -n '/\(ok\)\{3\}/p'
OR
sed -n '/\(ok\)\1\1/p'


lyang0@lyang0-OptiPlex-755:~/del$ sed 's/[a-zA-Z]*//2gp' 9
a   
a   
1 12 345 
1 12 345 
xd_ '
xd_ '
lyang0@lyang0-OptiPlex-755:~/del$ sed 's/[a-zA-Z]*//2p' 9
a  ab abcd
a  ab abcd
1 12 345 a
1 12 345 a
xd_ he's
xd_ he's

Sed 变量, 还有里面有' '的要用""来括起来

sed 's/foo/bar/4'                # 只替换每一行中的第四个“foo”字串
