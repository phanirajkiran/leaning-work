find which commits changed this file 
git log -GFULL_OPTIMIZATION  meta/conf/bitbake.conf 

lyang001@lyang0-9010:~/kvm_32/layers/oe-core$ git log -GFULL_OPTIMIZATION --pretty=format:%H:%an meta/conf/bitbake.conf
2864ff6a4b3c3f9b3bbb6d2597243cc5d3715939:Richard Purdie
5b9877aa55e28ba06410592350e7e5106ebdf6cb:Chris Larson
b22831fd63164c4db9c0b72934d7d734a6585251:Richard Purdie
9cb7113790d716a4c5cf7d511535ba87fdecd1ac:Khem Raj
2096c315df2d7d0a8fbf9df1be73f56b834c3340:Richard Purdie
b2f192faabe412adce79534e22efe9fb69ee40e2:Richard Purdie

git log --pretty=oneline
git shortlog --no-merges
lyang001@lyang0-9010:~/wrlinux-x/layers/wr-toolchain$ git shortlog LB28_5.0.1..master
Andy Ross (1):
      target-toolchain template: add binutils-symlinks [ Defect: WIND00403878 ]

Jackie Huang (1):
      wrl-binutils: fix the libiberty installed path

Roy.Li (1):



lyang001@lyang0-9010:~/ovs/layers/oe-core$ git shortlog --author="Anas Nashif"
Anas Nashif (3):
      New package: pam
      added packages: PolicyKit and PackageKit
      package pam correctly

git log --since=2.weeks

git log --name-status to check file change or delete or add  

Or if you have a search term that appears in the commit message:

$ git log --grep="Something in the message"


$ git log origin/master..new
# [old]..[new] - everything you haven't pushed yet

git log ^master WRLINUX_5_0_1_HEAD
git log master..WRLINUX_5_0_1_HEAD

git log --pretty=oneline --abbrev-commit

------------------------------------------------------
http://stackoverflow.com/questions/13858276/how-can-i-find-all-commits-that-are-in-one-branch-but-not-in-another-using-git/13958084#13958084

git log --cherry-pick --oneline --no-merges --left-only master...live

from the log manpage:

    --left-only, --right-only

    List only commits on the respective side of a symmetric range, i.e. only those which would be marked < resp. > by --left-right.

    For example, --cherry-pick --right-only A...B omits those commits from B which are in A or are patch-equivalent to a commit in A. In other words, this lists the + commits from git cherry A B. More precisely, --cherry-pick --right-only --no-merges gives the exact list.

