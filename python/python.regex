http://www.tutorialspoint.com/python/python_reg_expressions.htm

match vs search:

>>> line = "Cats are smarter than dogs";
>>> matchObj = re.match( r'(.*) are(.*)', line, re.M|re.I)
>>> print matchObj.group()
Cats are smarter than dogs
>>> print matchObj.group(1)
Cats
>>> print matchObj.group(2)
 smarter than dogs
---------------------------------------------------------------------------------
Python offers two different primitive operations based on regular expressions: 
match checks for a match only at the beginning of the string, while search checks 
for a match anywhere in the string (this is what Perl does by default).

#!/usr/bin/python
import re

line = "Cats are smarter than dogs";

matchObj = re.match( r'dogs', line, re.M|re.I)
if matchObj:
   print "match --> matchObj.group() : ", matchObj.group()
else:
   print "No match!!"

matchObj = re.search( r'dogs', line, re.M|re.I)
if matchObj:
   print "search --> matchObj.group() : ", matchObj.group()
else:
   print "No match!!"
-------------------------------------------------------------------------------------
>>> m = re.match(r"(\w+) (\w+)", "Isaac Newton, physicist")
>>> m.group(0)       # The entire match
'Isaac Newton'
>>> m.group(1)       # The first parenthesized subgroup.
'Isaac'
>>> m.group(2)       # The second parenthesized subgroup.
'Newton'
>>> m.group(1, 2)    # Multiple arguments give us a tuple.
('Isaac', 'Newton')
>>> m.groups()
('Isaac', 'Newton')
>>> m.groups()[1]
'Newton'
******************************************************************************************

sub:
#!/usr/bin/python

phone = "2004-959-559 #This is Phone Number"

# Delete Python-style comments
num = re.sub(r'#.*$', "", phone)
print "Phone Num : ", num

# Remove anything other than digits
num = re.sub(r'\D', "", phone)    
print "Phone Num : ", num


