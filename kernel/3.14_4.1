 225 config BPF_EVENTS
 226         depends on BPF_SYSCALL
 273 config SCHED_HRTICK
 274         def_bool HIGH_RES_TIMERS


 305 config VDSO
 306         bool "Enable VDSO for acceleration of some system calls"


 341 config CRYPTO_SHA1_OCTEON
 342         tristate "SHA1 digest algorithm (OCTEON)"
 343 config CRYPTO_SHA256_OCTEON
 344         tristate "SHA224 and SHA256 digest algorithm (OCTEON)"
 345 config CRYPTO_SHA512_OCTEON
 346         tristate "SHA384 and SHA512 digest algorithms (OCTEON)"


 452         tristate "PMULL-accelerated GHASH using ARMv8 Crypto Extensions"
 453 config CRYPTO_AES_ARM_CE
 454         tristate "Accelerated AES using ARMv8 Crypto Extensions"
 455 config CRYPTO_SHA2_ARM_CE
 456         tristate "SHA-224/256 digest algorithm (ARM v8 Crypto Extensions)"
 457 config CRYPTO_SHA1_ARM_CE
 458         tristate "SHA1 digest algorithm (ARM v8 Crypto Extensions)"
 459 config CRYPTO_SHA1_ARM
 460         tristate "SHA1 digest algorithm (ARM-asm)"
 461 config CRYPTO_SHA1_ARM_NEON
 462         tristate "SHA1 digest algorithm (ARM NEON)"
 463 config CRYPTO_SHA512_ARM_NEON
 464         tristate "SHA384 and SHA512 digest algorithm (ARM NEON)"
 465 config CRYPTO_AES_ARM
 466         tristate "AES cipher algorithms (ARM-asm)"
 467 config CRYPTO_AES_ARM_BS
 468         tristate "Bit sliced AES using NEON instructions"






 495 config CRYPTO_SHA1_OCTEON
 496         tristate "SHA1 digest algorithm (OCTEON)"
 497 config CRYPTO_SHA256_OCTEON
 498         tristate "SHA224 and SHA256 digest algorithm (OCTEON)"
 499 config CRYPTO_SHA512_OCTEON
 500         tristate "SHA384 and SHA512 digest algorithms (OCTEON)"



 537 config X86_DIRECT_GBPAGES
 538         def_bool y
 539 config ENABLE_DIRECT_GBPAGES
 540         def_bool y



 551 config CRYPTO_MD5_PPC
 552         tristate "MD5 digest algorithm (PPC)"

 561 config I40E_CONFIGFS_FS
 562         bool "Config File System Support (configfs)"



 569 config CRYPTO_SHA1_PPC_SPE
 570         tristate "SHA1 digest algorithm (PPC SPE)"
 571 config COMEDI_8254
 572         tristate
 573 config CRYPTO_AES_PPC_SPE
 574         tristate "AES cipher algorithms (PPC SPE)"


 579 config CRYPTO_DEV_VMX
 580         bool "Support for VMX cryptographic acceleration instructions"
 581 config CRYPTO_DEV_VMX_ENCRYPT
 582         tristate "Encryption acceleration support on P8 CPU"
 583 config CRYPTO_SHA256_PPC_SPE
 584         tristate "SHA224 and SHA256 digest algorithm (PPC SPE)"


 657 config BLK_DEV_RAM_DAX
 658         bool "Support Direct Access (DAX) to RAM block devices"


 671 config BT_DEBUGFS
 672         bool "Export Bluetooth internals in debugfs"

 691 config TEST_KASAN
 692         tristate "Module for testing kasan for bug detection"



 713 config EARLY_PRINTK
 714         bool "Activate early kernel debugging"


 729 config IXGBE_VXLAN
 730         bool "Virtual eXtensible Local Area Network Support"




 735 config ACPI_HOTPLUG_IOAPIC
 736         bool



 741 config LIVEPATCH
 742         bool "Kernel Live Patching"
 743 config SAMPLE_LIVEPATCH



1066 config F2FS_IO_TRACE
1067         bool "F2FS IO tracer"

1096 config BT_SELFTEST_SMP
1097         bool "SMP test cases"
1098 config BT_SELFTEST_ECDH
1099         bool "ECDH test cases"
1100 config BT_SELFTEST
1101         bool "Bluetooth self testing support"



1114 config CRYPTO_MD5_OCTEON
1115         tristate "MD5 digest algorithm (OCTEON)"



1139 config LIVE_PATCHING
1140         boolean "Kernel Live Patching"



1201 config NR_CPUS
1202         int

1215 config FPU
1216         def_bool n

1233 config CMDLINE_FORCE
1234         bool "Force default kernel command string"



3139 config CRYPTO_AES_ARM64_CE_BLK
3140         tristate "AES in ECB/CBC/CTR/XTS modes using ARMv8 Crypto Extensions"
3141 config CRYPTO_AES_ARM64_NEON_BLK
3142         tristate "AES in ECB/CBC/CTR/XTS modes using NEON instructions"
3143 config CRYPTO_AES_ARM64_CE_CCM
3144         tristate "AES in CCM mode using ARMv8 Crypto Extensions"
3145 config CRYPTO_AES_ARM64_CE
3146         tristate "AES core cipher using ARMv8 Crypto Extensions"
3147 config CRYPTO_GHASH_ARM64_CE
3148         tristate "GHASH (for GCM chaining mode) using ARMv8 Crypto Extensions"
3149 config CRYPTO_SHA2_ARM64_CE
3150         tristate "SHA-224/SHA-256 digest algorithm (ARMv8 Crypto Extensions)"
3151 config CRYPTO_SHA1_ARM64_CE
3152         tristate "SHA-1 digest algorithm (ARMv8 Crypto Extensions)"


IMAGE_ENABLE_CONTAINER


root@SDP_Wildcat_Pass-3-C1:/lib/modules/4.2.0-WR8.0.0.0_standard# insmod ./kernel/net/ipv6/ip6_tunnel.ko.gz
insmod: ERROR: could not insert module ./kernel/net/ipv6/ip6_tunnel.ko.gz: Unknown symbol in module





commit f3ac3fc287818a63072618b091074267bfa5184d
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Wed Feb 4 15:03:48 2015 +0200

    serial: 8250_dw: Add missing MODULE_ALIAS() for module autoloading support
    
    Without this the module does not load automatically whenever suitable
    platform device appears.
    
    Reported-by: Jerome Blin <jerome.blin@intel.com>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>



commit 3e14dcf7cb80b34a1f38b55bc96f02d23fdaaaaf
Author: Mathias Krause <minipli@googlemail.com>
Date:   Sun Jan 11 18:17:42 2015 +0100

    crypto: add missing crypto module aliases
    
    Commit 5d26a105b5a7 ("crypto: prefix module autoloading with "crypto-"")
    changed the automatic module loading when requesting crypto algorithms
    to prefix all module requests with "crypto-". This requires all crypto
    modules to have a crypto specific module alias even if their file name
    would otherwise match the requested crypto algorithm.
    
    Even though commit 5d26a105b5a7 added those aliases for a vast amount of
    modules, it was missing a few. Add the required MODULE_ALIAS_CRYPTO
    annotations to those files to make them get loaded automatically, again.
    This fixes, e.g., requesting 'ecb(blowfish-generic)', which used to work
    with kernels v3.18 and below.
    
    Also change MODULE_ALIAS() lines to MODULE_ALIAS_CRYPTO(). The former
    won't work for crypto modules any more.
    
    Fixes: 5d26a105b5a7 ("crypto: prefix module autoloading with "crypto-"")
    Cc: Kees Cook <keescook@chromium.org>
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>



commit 5d26a105b5a73e5635eae0629b42fa0a90e07b7b
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Nov 20 17:05:53 2014 -0800

    crypto: prefix module autoloading with "crypto-"
    
    This prefixes all crypto module loading with "crypto-" so we never run
    the risk of exposing module auto-loading to userspace via a crypto API,
    as demonstrated by Mathias Krause:
    
    https://lkml.org/lkml/2013/3/4/70
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

commit f98f89a0104454f35a62d681683c844f6dbf4043
Author: Tom Gundersen <teg@jklm.no>
Date:   Thu May 15 23:21:30 2014 +0200

    net: tunnels - enable module autoloading
    
    Enable the module alias hookup to allow tunnel modules to be autoloaded on demand.
    
    This is in line with how most other netdev kinds work, and will allow userspace
    to create tunnels without having CAP_SYS_MODULE.
    
    Signed-off-by: Tom Gundersen <teg@jklm.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit 6eb2451f7c43c4a7f84ae7b613ea975317b951f1
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Tue Jan 14 16:46:36 2014 +0800

    ACPI: add module autoloading support for ACPI enumerated devices
    


commit 5c057e5570f18b9d0f4eea99e0a0d55ad5f30e36
Author: Johan Hovold <jhovold@gmail.com>
Date:   Tue Nov 12 15:09:40 2013 -0800

    backlight: atmel-pwm-bl: fix module autoload
    
    Add missing module alias which is needed for module autoloading.
    
    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Acked-by: Jingoo Han <jg1.han@samsung.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>


commit 340991e30ccef7b983cf2814ecea610504f5d059
Author: Jussi Kivilinna <jussi.kivilinna@iki.fi>
Date:   Tue May 21 17:10:44 2013 +0300

    crypto: sha512_ssse3 - add sha384 support
    
    Add sha384 implementation to sha512_ssse3 module.
    
    This also fixes sha512_ssse3 module autoloading issue when 'sha384' is used
    before 'sha512'. Previously in such case, just sha512_generic was loaded and
    not sha512_ssse3 (since it did not provide sha384). Now if 'sha512' was used
    after 'sha384' usage, sha512_ssse3 would remain unloaded. For example, this
    happens with tcrypt testing module since it tests 'sha384' before 'sha512'.
    
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Signed-off-by: Jussi Kivilinna <jussi.kivilinna@iki.fi>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>






