 http://bbs.linuxtone.org/viewthread.php?tid=4699&extra=page%3D1%26amp%3Borderby%3Ddateline%26amp%3Bascdesc%3DDESC

http://blog.chinaunix.net/uid-261392-id-2138854.html sed 


ifconfig |sed -n -e '/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/p'

sed -i '/^master/ s/^/#/g' my.cnf
 

sed '/^[  ]*$/d'
删除空行

sed 在指定行查找
sed -n '4{/The/p}' quote.txt 
sed -n '5,10{/from/p}' out   使用大括号

sed -n '/regexp/,$p' 显示有regexp 只有的行


1、删除行首空格
   sed 's/^[ ]*//g' filename
   sed 's/^ *//g' filename
   sed 's/^[[:space:]]*//g' filename

2、行后和行前添加新行
   行后：sed 's/pattern/&\n/g' filename
   行前：sed 's/pattern/\n&/g' filename



# 从第3行开始，每7行显示一次
gsed -n '3~7p'                   # 只对GNU sed有效
sed -n '3,${p;n;n;n;n;n;n;}'     # 其他sed
awk '{if(NR==3)F=1}{if(F){i++;if(i%7==1)print}}'



# 显示部分文本——指定行号范围（从第8至第12行，含8和12行）
sed -n '8,12p'                   # 方法1
sed '8,12!d'                     # 方法2

# 显示第52行
sed -n '52p'                     # 方法1
sed '52!d'                       # 方法2
sed '52q;d'                      # 方法3, 处理大文件时更有效率
awk '{if(NR==52){print;exit}}'


[lyang0@pek-lpgbuild6 intel_5500_server_glibc_std]$ ifconfig |sed -n '5,10{/153/p}' 
eth0.153  Link encap:Ethernet  HWaddr 00:24:E8:4F:F2:1B 


# 在每一行中查找字串“foo”，并将找到的“foo”替换为“bar”
sed 's/foo/bar/'                 # 只替换每一行中的第一个“foo”字串
sed 's/foo/bar/4'                # 只替换每一行中的第四个“foo”字串
sed 's/foo/bar/g'                # 将每一行中的所有“foo”都换成“bar”
sed 's/\(.*\)foo\(.*foo\)/\1bar\2/' # 替换倒数第二个“foo”
sed 's/\(.*\)foo/\1bar/'            # 替换最后一个“foo”
awk '{gsub(/foo/,"bar");print $0}'   # 将每一行中的所有“foo”都换成“bar”

# 只在行中出现字串“baz”的情况下将“foo”替换成“bar”
sed '/baz/s/foo/bar/g'
awk '{if(/baz/)gsub(/foo/,"bar");print $0}'

# 将“foo”替换成“bar”，并且只在行中未出现字串“baz”的情况下替换
sed '/baz/!s/foo/bar/g'
awk '{if(/baz$/)gsub(/foo/,"bar");print $0}'

# 不管是“scarlet”“ruby”还是“puce”，一律换成“red”
sed 's/scarlet/red/g;s/ruby/red/g;s/puce/red/g'  #对多数的sed都有效
gsed 's/scarlet\|ruby\|puce/red/g'               # 只对GNU sed有效
awk '{gsub(/scarlet|ruby|puce/,"red");print $0}


# 显示文件中的前10行 （模拟“head”的行为）
sed 10q
awk '{print;if(NR==10)exit}'

# 显示文件中的最后2行（模拟“tail -2”命令）
sed '$!N;$!D'
awk '{A[NR]=$0}END{for(i=NR-1;i<=NR;i++)print A}'

#这个比较好办，只存最后一行了。
awk '{A=$0}END{print A}'

sed -n '/regexp/!p'              # 方法1，与前面的命令相对应
sed '/regexp/d'                  # 方法2，类似的语法

# 显示包含“AAA”、“BBB”和“CCC”的行（固定次序）
sed '/AAA.*BBB.*CCC/!d'
awk '{if(match($0,/AAA.*BBB.*CCC/))print}'

# 显示包含“AAA”“BBB”或“CCC”的行 （模拟“egrep”）
sed -e '/AAA/b' -e '/BBB/b' -e '/CCC/b' -e d    # 多数sed
gsed '/AAA\|BBB\|CCC/!d'                        # 对GNU sed有效
awk '/AAA/{print;next}/BBB/{print;next}/CCC/{print}'
awk '/AAA|BBB|CCC/{print}'



sed 's/$/ daoyou/' file把每行的结尾附加daoyou（在同一行）
sed '/test/s/$/ daoyou/' file把包含test行的结尾附加daoyou(在同一行)
sed '10s/$/ daoyou/' file把第10行的结尾附加daoyou(在同一行)



10.   awk之BEGIN和END

即在文件头增加列名：

cat userlog |awk 'BEGIN{print "Time username\n-----------------"};{print $4,$7}'

Time     username

------------------------------

15:19:28 username:xmdh

15:20:00 username:xmdh

将在上面的基础上增加结尾说明“end of report!!!!”

cat userlog |awk 'BEGIN{print "Time     username\n-----------------"}{print $4,$7}END{print "end of report!!!!"}'



[lyang0@pek-lpgbuild6 pbzip_bak]$ ./test |awk -F: '{print $4 }' |sed '/^[  ]*$/d'
4.350
2.312
1.661
1.273
1.243
0.926
0.911
0.889


删除空行

sed /^[[:space:]][[:space:]]*$/d
+属于扩展正则表达式的元字符，不是所有版本的sed都支持吧
sed '/^[ \t]*$/d' (space + tab) 

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

sed -i '/Name="linux"/s/Cores="[0-9]"/Cores="3"/g' linux.xml


[lyang0@pek-lpgbuild6 x86-linux2]$ ls |grep gcc |grep atom
lrwxrwxrwx 1 lyang0 users   44 Mar 23 12:44 i586-wrs-linux-gnu-atom-glibc_std-gcc -> i586-wrs-linux-gnu-atom-glibc_std-wrapper.sh


[lyang0@pek-lpgbuild6 x86-linux2]$ ls /lpg-build/cdc/sustaining/fall08-3.0.3-lx10/wrlinux-3.0/layers/wrll-toolchain-4.3a-269/i586/toolchain/x86-linux2/bin/
get_feature                        i586-wrs-linux-gnu-cpp             i586-wrs-linux-gnu-gdb             i586-wrs-linux-gnu-nm              i586-wrs-linux-gnu-size
i586-wrs-linux-gnu-addr2line       i586-wrs-linux-gnu-execstack       i586-wrs-linux-gnu-gdbtui          i586-wrs-linux-gnu-objcopy         i586-wrs-linux-gnu-strings
i586-wrs-linux-gnu-ar              i586-wrs-linux-gnu-g++             i586-wrs-linux-gnu-gprof           i586-wrs-linux-gnu-objdump         i586-wrs-linux-gnu-strip
i586-wrs-linux-gnu-as              i586-wrs-linux-gnu-gcc             i586-wrs-linux-gnu-ld              i586-wrs-linux-gnu-prelink         
i586-wrs-linux-gnu-c++             i586-wrs-linux-gnu-gcc-4.3.2       i586-wrs-linux-gnu-mklibs          i586-wrs-linux-gnu-ranlib          
i586-wrs-linux-gnu-c++filt         i586-wrs-linux-gnu-gcov            i586-wrs-linux-gnu-mklibs-readelf  i586-wrs-linux-gnu-readelf


[lyang0@pek-lpgbuild6 x86-linux2]$ ls /lpg-build/cdc/sustaining/fall08-3.0.3-lx10/wrlinux-3.0/layers/wrll-toolchain-4.3a-269/i586/toolchain/x86-linux2/bin/ |grep gcc
-rwxr-xr-x 1 pyan users  200028 Mar  8 10:56 i586-wrs-linux-gnu-gcc
-rwxr-xr-x 1 pyan users  200028 Mar  8 10:56 i586-wrs-linux-gnu-gcc-4.3.2


grep -o '^\/dev/hd[a-z][0-9]'


cat -n file|sed '/hello,world/{n;/my dear/d}' 删除匹配行的下一行

/home/lee#cat -n file
    1  abcdefg
    2  my dear
    3  hello,world
    4  my dear
    5  haha
    6  my dear
/home/lee#cat -n file|sed '/hello,world/{n;/my dear/d}'
    1  abcdefg
    2  my dear
    3  hello,world
    5  haha
    6  my dear



