To get he
git format-patch -n --root:
Subject: [PATCH 01/20] LTTng modularization, import of lttng 0.226

format everything since the beginning of history up until <commit>,use the--root option: 
git format-patch --root <commit>
git format-patch --root to get the whole tree patches since the beginning 

If you want to format only <commit> itself, you can do this with 
   git format-patch -1 <commit>


Start numbering the patches at <n> instead of 1.
    --start-number <n>
lyang0@lyang0-OptiPlex-755:~/git/lttng-modules$ git format-patch -n --root --start-number=200
0200-LTTng-modularization-import-of-lttng-0.226.patch
0201-Support-architectures-without-dump-tables.patch
0202-Fix-circular-module-deps.patch
0203-ltt-ascii-init-fix-renaming-CONFIG_LTT_-options-to-L.patch
0204-VFS-update-to-new-unlocked_ioctl.patch
0205-probes-fs-trace.c-const-char-fs_exec.patch
0206-block-trace-update-to-2.6.36.patch

 
 
Tracking branch 
http://androider.iteye.com/blog/1145254

lyang0@lyang0-OptiPlex-755:~/community/ltp$ git checkout --track -b develop   origin/master
Branch develop set up to track remote branch master from origin.
切换到一个新分支 'develop'
lyang0@lyang0-OptiPlex-755:~/community/ltp$ cat .git/config 
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
[remote "origin"]
	fetch = +refs/heads/*:refs/remotes/origin/*
	url = git://ltp.git.sourceforge.net/gitroot/ltp/ltp.git
[branch "master"]
	remote = origin
	merge = refs/heads/master
[branch "develop"]
	remote = origin
	merge = refs/heads/master

lyang0@lyang0-OptiPlex-755:~/community/ltp$ ls .git/refs/heads/
develop  master   
lyang0@lyang0-OptiPlex-755:~/community/ltp$ ls .git/refs/remotes/origin/
HEAD    master  
跟踪分支是一种和远程分支有直接联系的本地分支(远程分支的本地书签、别名)，跟踪分支是一种本地分支！
   
  当我们在跟踪分支上使用git pull命令，会自动从相应的remote branch上fetch，然后在merge到该分支上
  如果我们想在跟踪分支上直接使用git push命令，让它自动push到对应的remote branch上
  还需要设置push的默认行为：
  


Hum... So actually it's as simple as:
git format-patch commit_id file(s)where commit_id is the parent of the first commit to create a patch followed by the file or files wanted.

========================
[adam@mbp2600 example (master)]$ git checkout -b tmpsquash
Switched to a new branch "tmpsquash"

[adam@mbp2600 example (tmpsquash)]$ git merge --squash newlines
Updating 4d2de39..b6768b2
Fast forward
Squash commit -- not updating HEAD
 test.txt |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

[adam@mbp2600 example (tmpsquash)]$ git commit -a -m "My squashed commits"
[tmpsquash]: created 75b0a89: "My squashed commits"
 1 files changed, 2 insertions(+), 0 deletions(-)

[adam@mbp2600 example (tmpsquash)]$ git format-patch master
0001-My-squashed-commits.patch

======================


git format-patch --root --stdout ram_console.c >>xx ??????????????

git format-patch --root ram_console.c can git the formated patch for one file 

Hum... So actually it's as simple as:
git format-patch commit_id file(s)
where commit_id is the parent of the first commit to create a patch followed by the file or files wanted..





[lyang0@ala-lpggp2 android]$ git rev-list --all ram_console.c
296736552fb30a183b8c4635a6cd94f2cb74aa82
06caa4174ef7ec0f9c1e7c898a52e737c4897714
dd09979346813357200adf71b07003fc0a778089
3a21138d3f76296ad070a3692d72eb529e7d5d2c
404a6043385de17273624b076599669db5ad891f
9cc05ad97c5728aaf4db94490daf41f8958b5aee
c672528aec4a1cf6f3df7a6022e6823a20b20f8e
c5ee1211f249b0897f715aba4647c1f494509cab
8294e2362fa1ce8a172a32ae8607d35563e8b043
f6ccb80ed6c96af2138da49b621edd3d0f19fdca
74f6736ecfbbbe9e7ebf9ba52475b6cb39c44f75
8d438bef6556315a23781fd673f13f7bfb94047d
28aa41fb8d555b120edefd7fdf879b156a1c9f3a

..........



http://f2e.us/wiki/git-branch.html#!/
      
commit 68d1eb631321a5f474b377253c154b1e0f1c8d96
Author: Caspar Zhang <caspar@casparzhang.com>
Date:   Fri Mar 9 00:18:01 2012 +0800

    make mce-test a submodule
    
    cloning mce-test from
    
        git://github.com/andikleen/mce-test.git
    
    and use it as a submodule of git.
    
    Signed-off-by: Caspar Zhang <caspar@casparzhang.com>
    Reviewed-by: Wanlong Gao <gaowanlong@cn.fujitsu.com>
    Reviewed-by: Andi Kleen <andi.kleen@intel.com>
    Acked-by: Shubham Goyal <shubham@linux.vnet.ibm.com>

diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 0000000..e9eefdb
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,3 @@
+[submodule "testcases/kernel/mce-test"]
+       path = testcases/kernel/mce-test
+       url = git://github.com/andikleen/mce-test.git


1) what is fetch 



2)git push orign master


3)from seri to get patchsets
for i in `cat x`;do t=$((t+1));git format-patch -1 $i --start-number $t;done


lyang0@lyang0-OptiPlex-755:~/git/linux-stable$ git shortlog 0c57278d2953fb6ea9eae7d60765d13a4d219688..e2d1437b6d7c0283d0fbbe994bc389fc0e28a047
Mathieu Desnoyers (2):
      arm-omap-trace-clock-notrace
      lttng-instrumentation/lttng-instrumentation-fs-dup

$  git shortlog -s      # or git shortlog -s -n

get the commit id for one file 



92fd9ba4c4ab6538ea5b571248f5a174bda21d05


git log --merges 3d9944978e0bb6c98b901949cb7a22256e48b23d..

lyang0@lyang0-OptiPlex-755:~/git/kernel-3.4.x$ git branch -a --contains 3d9944978e0bb6c98b901949cb7a22256e48b23d


Prior commits work something like this:

# Parent of HEAD
git show HEAD^1

# Grandparent
git show HEAD~2
There are a lot of ways you can specify commits:

# Great grandparent
git show HEAD~3


http://yuxu9710108.blog.163.com/blog/static/2375153420101115424711/  git biset


commit 0e93b4b304ae052ba1bc73f6d34a68556fe93429
Merge: b724cc1 51bfd29

git log --format='%H %P' |grep " $commit" |cut -d' ' -f1

git log --format='%H %P'

http://stackoverflow.com/questions/2285699/git-how-to-create-patches-for-a-merge

git log --merges --format='%H %s' |grep kvm

lyang0@lyang0-OptiPlex-755:~/git/kernel-3.4.x$ git log --merges --format='%H %s' |grep cgroup
1338631433d8de7cf85b7e8fcf1a389ad89e7a8f Merge branch 'for-3.4-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup
0d9cabdccedb79ee5f27b77ff51f29a9e7d23275 Merge branch 'for-3.4' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup
db0c2bf69aa095d4a6de7b1145f29fe9a7c0f6a3 Merge branch 'for-3.3' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup
a4a4923919f2d43583789b1f3603f4e5600d8321 Merge branch 'for-3.2-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup
a34815b96f9a21b3a2e2912dfd0d994acd2855e3 Merge branch 'for-3.2-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup
c5e0c7825d3a14c2dfc383763393f0bcb5400aa6 Merge branch 'for-3.2-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup


How to get the commit id  list
git log --format="%H" ram_console.c >xx


http://stackoverflow.com/questions/11031294/git-how-to-see-if-a-branch-has-ever-been-merged-into-another-branch



1. lists the branches that are already merged

git branch --merged 
2. lists the branches that have not been merged (if its not there that means its merged)

git branch --no-merged 


../bin/wrgit: Updating subgit: git/git.yoctoproject.org.web-webkit
../bin/wrgit: Creating tracking branches for git.yoctoproject.org.web-webkit
../bin/wrgit: Updating subgit: git/git.yoctoproject.org.xsettings-daemon
../bin/wrgit: Creating tracking branches for git.yoctoproject.org.xsettings-daemon
../bin/wrgit: Updating subgit: git/git.yoctoproject.org.yocto-kernel-tools.git
../bin/wrgit: Creating tracking branches for git.yoctoproject.org.yocto-kernel-tools.git
../bin/wrgit: Updating subgit: git/git.yoctoproject.org.zaurusd
../bin/wrgit: Creating tracking branches for git.yoctoproject.org.zaurusd
../bin/wrgit: Updating subgit: git/sources.redhat.com.git.systemtap.git
../bin/wrgit: Creating tracking branches for sources.redhat.com.git.systemtap.git
../bin/wrgit: Updating subgit: git/www.jdl.com.software.dtc.git
../bin/wrgit: Creating tracking branches for www.jdl.com.software.dtc.git
../bin/wrgit: Updating subgit: git/oss.tresys.com.git.selinux.git
../bin/wrgit: Creating tracking branches for oss.tresys.com.git.selinux.git
../bin/wrgit: Updating subgit: git/git.umip.org.umip.git
../bin/wrgit: Creating tracking branches for git.umip.org.umip.git



git show v3.4:drivers/staging/android/ram_console.c

